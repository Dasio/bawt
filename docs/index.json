[
{
	"uri": "https://capstonelabs.github.io/bawt/plugins/",
	"title": "Plugins",
	"tags": [],
	"description": "",
	"content": "Creating a new plugin is as simple as:\n Create a new go package (no main() function) Include a bawt.Listener  // listenDeploy was hooked into a plugin elsewhere.. func listenDeploy() { keywords := []string{\u0026quot;project1\u0026quot;, \u0026quot;project2\u0026quot;, \u0026quot;project3\u0026quot;} bot.Listen(\u0026amp;bawt.Listener{ Matches: regexp.MustCompile(\u0026quot;(can you|could you|please|plz|c'mon|icanhaz) deploy (\u0026quot; + strings.Join(keywords, \u0026quot;|\u0026quot;) + \u0026quot;) (with|using)( revision| commit)? `?([a-z0-9]{4,42})`?\u0026quot;), MentionsMeOnly: true, MessageHandlerFunc: func(listen *bawt.Listener, msg *bawt.Message) { projectName := msg.Match[2] revision := msg.Match[5] go func() { go msg.AddReaction(\u0026quot;work_hard\u0026quot;) defer msg.RemoveReaction(\u0026quot;work_hard\u0026quot;) // Do the deployment with projectName and revision... }() }, }) }  "
},
{
	"uri": "https://capstonelabs.github.io/bawt/press-kit/",
	"title": "Press Kit",
	"tags": [],
	"description": "",
	"content": " Authorized logos   Logos   bawt-colored.png  (24 ko)   bawt-colored.svg  (33 ko)   bawt-white.png  (23 ko)   bawt-white.svg  (33 ko)    The logos use Prosto One as their font.\nColors are: #00baff and #ffffff\n"
},
{
	"uri": "https://capstonelabs.github.io/bawt/code-of-conduct/",
	"title": "Code of Conduct",
	"tags": [],
	"description": "",
	"content": " Our Pledge In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\nOur Standards Examples of behavior that contributes to creating a positive environment include:\n Using welcoming and inclusive language Being respectful of differing viewpoints and experiences Gracefully accepting constructive criticism Focusing on what is best for the community Showing empathy towards other community members  Examples of unacceptable behavior by participants include:\n The use of sexualized language or imagery and unwelcome sexual attention or advances Trolling, insulting/derogatory comments, and personal or political attacks Public or private harassment Publishing others\u0026rsquo; private information, such as a physical or electronic address, without explicit permission Other conduct which could reasonably be considered inappropriate in a professional setting  Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nScope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\nEnforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at matthew.ouille@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project\u0026rsquo;s leadership.\nAttribution This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at http://contributor-covenant.org/version/1/4\n"
},
{
	"uri": "https://capstonelabs.github.io/bawt/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://capstonelabs.github.io/bawt/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://capstonelabs.github.io/bawt/",
	"title": "home",
	"tags": [],
	"description": "",
	"content": " bawt is a Go-based ChatOps bot for Slack.\nFeatures  Plugin interface for chat messages Plugin-based HTTP handlers Simple API to reply to users Keeps an internal state of channels, users and their state. Listen for Reactions; take actions based on them (like buttons). Simple API to message users privately Simple API to update a previously sent message Simple API to delete bot messages after a given time duration. Easy plugin interface, listeners with criteria such as:  Messages directed to the bot only Private or public messages Listens for a duration or until a given time.Time Selectively on a channel, or from a user Expire listeners and unregister them dynamically Supports listening for edits or not Regexp match messages, or Contains checks  Built-in KV store for data persistence (backed by BoltDB and JSON serialization) The bot has a mood (happy and hyper) which changes randomly.. you can base some decisions on it, to spice up conversations. Supports listening for any Slack events (ChannelCreated, ChannelJoined, EmojiChanged, FileShared, GroupArchived, etc..) A PubSub system to facilitate inter-plugins (or chat-to-web) communications.  "
}]